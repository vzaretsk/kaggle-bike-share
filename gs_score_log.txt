search space:
{'max_depth': [2, 5, 10, 20, 50, 100, 200, 500], 'loss': ['exponential'], 'n_estimators': [10, 20, 50, 100, 200, 500, 1000, 2000]}
cross validation:
ShuffleSplit(10862, n_iter=1, test_size=0.1, random_state=None)
grid search:
GridSearchCV(cv=ShuffleSplit(10862, n_iter=1, test_size=0.1, random_state=None),
       error_score='raise',
       estimator=AdaBoostRegressorDTree(loss='linear', max_depth=None, n_estimators=50),
       fit_params={}, iid=True, loss_func=None, n_jobs=2,
       param_grid={'max_depth': [2, 5, 10, 20, 50, 100, 200, 500], 'loss': ['exponential'], 'n_estimators': [10, 20, 50, 100, 200, 500, 1000, 2000]},
       pre_dispatch='2*n_jobs', refit=False, score_func=None,
       scoring='mean_squared_error', verbose=2)
mean: 0.0893, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 2, 'n_estimators': 10}
mean: 0.1014, stdev: 0.0000 MSE for {'max_depth': 2, 'loss': 'exponential', 'n_estimators': 20}
mean: 0.0728, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 2, 'n_estimators': 50}
mean: 0.0803, stdev: 0.0000 MSE for {'max_depth': 2, 'loss': 'exponential', 'n_estimators': 100}
mean: 0.0848, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 2, 'n_estimators': 200}
mean: 0.0877, stdev: 0.0000 MSE for {'max_depth': 2, 'loss': 'exponential', 'n_estimators': 500}
mean: 0.0845, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 2, 'n_estimators': 1000}
mean: 0.0845, stdev: 0.0000 MSE for {'max_depth': 2, 'loss': 'exponential', 'n_estimators': 2000}
mean: 0.0853, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 5, 'n_estimators': 10}
mean: 0.0946, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 5, 'n_estimators': 20}
mean: 0.0860, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 5, 'n_estimators': 50}
mean: 0.0924, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 5, 'n_estimators': 100}
mean: 0.0910, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 5, 'n_estimators': 200}
mean: 0.0881, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 5, 'n_estimators': 500}
mean: 0.0812, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 5, 'n_estimators': 1000}
mean: 0.0933, stdev: 0.0000 MSE for {'max_depth': 5, 'loss': 'exponential', 'n_estimators': 2000}
mean: 0.0842, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 10, 'n_estimators': 10}
mean: 0.0905, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 10, 'n_estimators': 20}
mean: 0.0872, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 10, 'n_estimators': 50}
mean: 0.0839, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 10, 'n_estimators': 100}
mean: 0.0777, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 10, 'n_estimators': 200}
mean: 0.0761, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 10, 'n_estimators': 500}
mean: 0.0817, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 10, 'n_estimators': 1000}
mean: 0.0716, stdev: 0.0000 MSE for {'max_depth': 10, 'loss': 'exponential', 'n_estimators': 2000}
mean: 0.0998, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 20, 'n_estimators': 10}
mean: 0.0903, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 20, 'n_estimators': 20}
mean: 0.0881, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 20, 'n_estimators': 50}
mean: 0.0884, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 20, 'n_estimators': 100}
mean: 0.0720, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 20, 'n_estimators': 200}
mean: 0.0852, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 20, 'n_estimators': 500}
mean: 0.0711, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 20, 'n_estimators': 1000}
mean: 0.0753, stdev: 0.0000 MSE for {'max_depth': 20, 'loss': 'exponential', 'n_estimators': 2000}
mean: 0.1021, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 10}
mean: 0.0886, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 20}
mean: 0.0840, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 50}
mean: 0.0924, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 100}
mean: 0.1061, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 200}
mean: 0.0863, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 500}
mean: 0.0907, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 1000}
mean: 0.0795, stdev: 0.0000 MSE for {'max_depth': 50, 'loss': 'exponential', 'n_estimators': 2000}
mean: 0.0966, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 100, 'n_estimators': 10}
mean: 0.0859, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 100, 'n_estimators': 20}
mean: 0.0777, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 100, 'n_estimators': 50}
mean: 0.0721, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 100, 'n_estimators': 100}
mean: 0.0946, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 100, 'n_estimators': 200}
mean: 0.0850, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 100, 'n_estimators': 500}
mean: 0.0826, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 100, 'n_estimators': 1000}
mean: 0.0904, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 100, 'n_estimators': 2000}
mean: 0.0914, stdev: 0.0000 MSE for {'max_depth': 200, 'loss': 'exponential', 'n_estimators': 10}
mean: 0.0781, stdev: 0.0000 MSE for {'max_depth': 200, 'loss': 'exponential', 'n_estimators': 20}
mean: 0.0942, stdev: 0.0000 MSE for {'max_depth': 200, 'loss': 'exponential', 'n_estimators': 50}
mean: 0.0765, stdev: 0.0000 MSE for {'max_depth': 200, 'loss': 'exponential', 'n_estimators': 100}
mean: 0.0728, stdev: 0.0000 MSE for {'max_depth': 200, 'loss': 'exponential', 'n_estimators': 200}
mean: 0.0866, stdev: 0.0000 MSE for {'max_depth': 200, 'loss': 'exponential', 'n_estimators': 500}
mean: 0.0934, stdev: 0.0000 MSE for {'max_depth': 200, 'loss': 'exponential', 'n_estimators': 1000}
mean: 0.0914, stdev: 0.0000 MSE for {'max_depth': 200, 'loss': 'exponential', 'n_estimators': 2000}
mean: 0.0898, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 500, 'n_estimators': 10}
mean: 0.0944, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 500, 'n_estimators': 20}
mean: 0.0927, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 500, 'n_estimators': 50}
mean: 0.0756, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 500, 'n_estimators': 100}
mean: 0.0748, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 500, 'n_estimators': 200}
mean: 0.0782, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 500, 'n_estimators': 500}
mean: 0.0822, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 500, 'n_estimators': 1000}
mean: 0.0861, stdev: 0.0000 MSE for {'loss': 'exponential', 'max_depth': 500, 'n_estimators': 2000}
search space:
{'loss': ['exponential'], 'n_estimators': [10, 20, 50, 100, 200, 500, 1000, 2000], 'max_depth': [2, 5, 10, 20, 50, 100, 200, 500]}
cross validation:
ShuffleSplit(10862, n_iter=20, test_size=0.1, random_state=None)
grid search:
GridSearchCV(cv=ShuffleSplit(10862, n_iter=20, test_size=0.1, random_state=None),
       error_score='raise',
       estimator=AdaBoostRegressorDTree(loss='linear', max_depth=None, n_estimators=50),
       fit_params={}, iid=True, loss_func=None, n_jobs=2,
       param_grid={'loss': ['exponential'], 'n_estimators': [10, 20, 50, 100, 200, 500, 1000, 2000], 'max_depth': [2, 5, 10, 20, 50, 100, 200, 500]},
       pre_dispatch='2*n_jobs', refit=False, score_func=None,
       scoring='mean_squared_error', verbose=2)
mean: 0.0959, stdev: 0.0081 MSE for {'loss': 'exponential', 'n_estimators': 10, 'max_depth': 2}
mean: 0.0859, stdev: 0.0056 MSE for {'loss': 'exponential', 'n_estimators': 20, 'max_depth': 2}
mean: 0.0847, stdev: 0.0066 MSE for {'loss': 'exponential', 'n_estimators': 50, 'max_depth': 2}
mean: 0.0835, stdev: 0.0065 MSE for {'loss': 'exponential', 'n_estimators': 100, 'max_depth': 2}
mean: 0.0829, stdev: 0.0069 MSE for {'loss': 'exponential', 'n_estimators': 200, 'max_depth': 2}
mean: 0.0802, stdev: 0.0061 MSE for {'loss': 'exponential', 'n_estimators': 500, 'max_depth': 2}
mean: 0.0812, stdev: 0.0066 MSE for {'loss': 'exponential', 'n_estimators': 1000, 'max_depth': 2}
mean: 0.0796, stdev: 0.0062 MSE for {'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 2}
mean: 0.0928, stdev: 0.0089 MSE for {'loss': 'exponential', 'n_estimators': 10, 'max_depth': 5}
mean: 0.0873, stdev: 0.0058 MSE for {'loss': 'exponential', 'n_estimators': 20, 'max_depth': 5}
mean: 0.0850, stdev: 0.0072 MSE for {'loss': 'exponential', 'n_estimators': 50, 'max_depth': 5}
mean: 0.0823, stdev: 0.0069 MSE for {'loss': 'exponential', 'n_estimators': 100, 'max_depth': 5}
mean: 0.0818, stdev: 0.0057 MSE for {'loss': 'exponential', 'n_estimators': 200, 'max_depth': 5}
mean: 0.0804, stdev: 0.0072 MSE for {'loss': 'exponential', 'n_estimators': 500, 'max_depth': 5}
mean: 0.0807, stdev: 0.0062 MSE for {'loss': 'exponential', 'n_estimators': 1000, 'max_depth': 5}
mean: 0.0823, stdev: 0.0077 MSE for {'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 5}
mean: 0.0957, stdev: 0.0083 MSE for {'loss': 'exponential', 'n_estimators': 10, 'max_depth': 10}
mean: 0.0855, stdev: 0.0064 MSE for {'loss': 'exponential', 'n_estimators': 20, 'max_depth': 10}
mean: 0.0823, stdev: 0.0060 MSE for {'loss': 'exponential', 'n_estimators': 50, 'max_depth': 10}
mean: 0.0824, stdev: 0.0080 MSE for {'loss': 'exponential', 'n_estimators': 100, 'max_depth': 10}
mean: 0.0837, stdev: 0.0065 MSE for {'loss': 'exponential', 'n_estimators': 200, 'max_depth': 10}
mean: 0.0815, stdev: 0.0066 MSE for {'loss': 'exponential', 'n_estimators': 500, 'max_depth': 10}
mean: 0.0858, stdev: 0.0054 MSE for {'loss': 'exponential', 'n_estimators': 1000, 'max_depth': 10}
mean: 0.0797, stdev: 0.0053 MSE for {'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 10}
mean: 0.0955, stdev: 0.0086 MSE for {'loss': 'exponential', 'n_estimators': 10, 'max_depth': 20}
mean: 0.0882, stdev: 0.0058 MSE for {'loss': 'exponential', 'n_estimators': 20, 'max_depth': 20}
mean: 0.0811, stdev: 0.0058 MSE for {'loss': 'exponential', 'n_estimators': 50, 'max_depth': 20}
mean: 0.0835, stdev: 0.0067 MSE for {'loss': 'exponential', 'n_estimators': 100, 'max_depth': 20}
mean: 0.0809, stdev: 0.0044 MSE for {'loss': 'exponential', 'n_estimators': 200, 'max_depth': 20}
mean: 0.0841, stdev: 0.0050 MSE for {'loss': 'exponential', 'n_estimators': 500, 'max_depth': 20}
mean: 0.0838, stdev: 0.0061 MSE for {'loss': 'exponential', 'n_estimators': 1000, 'max_depth': 20}
mean: 0.0818, stdev: 0.0063 MSE for {'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 20}
mean: 0.0932, stdev: 0.0057 MSE for {'loss': 'exponential', 'n_estimators': 10, 'max_depth': 50}
mean: 0.0873, stdev: 0.0078 MSE for {'loss': 'exponential', 'n_estimators': 20, 'max_depth': 50}
mean: 0.0854, stdev: 0.0064 MSE for {'loss': 'exponential', 'n_estimators': 50, 'max_depth': 50}
mean: 0.0842, stdev: 0.0044 MSE for {'loss': 'exponential', 'n_estimators': 100, 'max_depth': 50}
mean: 0.0833, stdev: 0.0063 MSE for {'loss': 'exponential', 'n_estimators': 200, 'max_depth': 50}
mean: 0.0829, stdev: 0.0084 MSE for {'loss': 'exponential', 'n_estimators': 500, 'max_depth': 50}
mean: 0.0812, stdev: 0.0084 MSE for {'loss': 'exponential', 'n_estimators': 1000, 'max_depth': 50}
mean: 0.0825, stdev: 0.0064 MSE for {'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 50}
mean: 0.0945, stdev: 0.0065 MSE for {'loss': 'exponential', 'n_estimators': 10, 'max_depth': 100}
mean: 0.0865, stdev: 0.0069 MSE for {'loss': 'exponential', 'n_estimators': 20, 'max_depth': 100}
mean: 0.0824, stdev: 0.0064 MSE for {'loss': 'exponential', 'n_estimators': 50, 'max_depth': 100}
mean: 0.0836, stdev: 0.0063 MSE for {'loss': 'exponential', 'n_estimators': 100, 'max_depth': 100}
mean: 0.0851, stdev: 0.0076 MSE for {'loss': 'exponential', 'n_estimators': 200, 'max_depth': 100}
mean: 0.0842, stdev: 0.0063 MSE for {'loss': 'exponential', 'n_estimators': 500, 'max_depth': 100}
mean: 0.0838, stdev: 0.0055 MSE for {'loss': 'exponential', 'n_estimators': 1000, 'max_depth': 100}
mean: 0.0839, stdev: 0.0072 MSE for {'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 100}
mean: 0.0963, stdev: 0.0074 MSE for {'loss': 'exponential', 'n_estimators': 10, 'max_depth': 200}
mean: 0.0889, stdev: 0.0062 MSE for {'loss': 'exponential', 'n_estimators': 20, 'max_depth': 200}
mean: 0.0831, stdev: 0.0065 MSE for {'loss': 'exponential', 'n_estimators': 50, 'max_depth': 200}
mean: 0.0821, stdev: 0.0058 MSE for {'loss': 'exponential', 'n_estimators': 100, 'max_depth': 200}
mean: 0.0820, stdev: 0.0038 MSE for {'loss': 'exponential', 'n_estimators': 200, 'max_depth': 200}
mean: 0.0845, stdev: 0.0073 MSE for {'loss': 'exponential', 'n_estimators': 500, 'max_depth': 200}
mean: 0.0812, stdev: 0.0066 MSE for {'loss': 'exponential', 'n_estimators': 1000, 'max_depth': 200}
mean: 0.0835, stdev: 0.0056 MSE for {'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 200}
mean: 0.0924, stdev: 0.0069 MSE for {'loss': 'exponential', 'n_estimators': 10, 'max_depth': 500}
mean: 0.0925, stdev: 0.0093 MSE for {'loss': 'exponential', 'n_estimators': 20, 'max_depth': 500}
mean: 0.0863, stdev: 0.0069 MSE for {'loss': 'exponential', 'n_estimators': 50, 'max_depth': 500}
mean: 0.0814, stdev: 0.0064 MSE for {'loss': 'exponential', 'n_estimators': 100, 'max_depth': 500}
mean: 0.0837, stdev: 0.0052 MSE for {'loss': 'exponential', 'n_estimators': 200, 'max_depth': 500}
mean: 0.0838, stdev: 0.0067 MSE for {'loss': 'exponential', 'n_estimators': 500, 'max_depth': 500}
mean: 0.0830, stdev: 0.0098 MSE for {'loss': 'exponential', 'n_estimators': 1000, 'max_depth': 500}
mean: 0.0836, stdev: 0.0064 MSE for {'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 500}
search space:
{'loss': ['exponential'], 'max_depth': [50], 'n_estimators': [2000], 'learning_rate': [0.2, 0.4, 0.6, 0.8, 1.0]}
cross validation:
ShuffleSplit(10862, n_iter=5, test_size=0.1, random_state=None)
grid search:
GridSearchCV(cv=ShuffleSplit(10862, n_iter=5, test_size=0.1, random_state=None),
       error_score='raise',
       estimator=AdaBoostRegressorDTree(learning_rate=1.0, loss='linear', max_depth=None,
            n_estimators=50),
       fit_params={}, iid=True, loss_func=None, n_jobs=2,
       param_grid={'loss': ['exponential'], 'max_depth': [50], 'n_estimators': [2000], 'learning_rate': [0.2, 0.4, 0.6, 0.8, 1.0]},
       pre_dispatch='2*n_jobs', refit=False, score_func=None,
       scoring='mean_squared_error', verbose=3)
mean: 0.0829, stdev: 0.0062 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 2000, 'learning_rate': 0.2}
mean: 0.0787, stdev: 0.0063 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 2000, 'learning_rate': 0.4}
mean: 0.0814, stdev: 0.0072 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 2000, 'learning_rate': 0.6}
mean: 0.0843, stdev: 0.0026 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 2000, 'learning_rate': 0.8}
mean: 0.0804, stdev: 0.0080 MSE for {'loss': 'exponential', 'max_depth': 50, 'n_estimators': 2000, 'learning_rate': 1.0}
search space:
{'learning_rate': [0.4], 'max_depth': [50], 'n_estimators': [2000], 'loss': ['exponential']}
cross validation:
ShuffleSplit(10862, n_iter=5, test_size=0.1, random_state=None)
grid search:
GridSearchCV(cv=ShuffleSplit(10862, n_iter=5, test_size=0.1, random_state=None),
       error_score='raise',
       estimator=AdaBoostRegressorDTree(learning_rate=1.0, loss='linear', max_depth=None,
            n_estimators=50),
       fit_params={}, iid=True, loss_func=None, n_jobs=2,
       param_grid={'learning_rate': [0.4], 'max_depth': [50], 'n_estimators': [2000], 'loss': ['exponential']},
       pre_dispatch='2*n_jobs', refit=False, score_func=None,
       scoring='mean_squared_error', verbose=3)
mean: 0.0813, stdev: 0.0037 MSE for {'learning_rate': 0.4, 'loss': 'exponential', 'n_estimators': 2000, 'max_depth': 50}
search space:
{'n_estimators': [200], 'max_depth': [50], 'learning_rate': [0.4], 'loss': ['exponential']}
cross validation:
ShuffleSplit(10862, n_iter=5, test_size=0.1, random_state=None)
grid search:
GridSearchCV(cv=ShuffleSplit(10862, n_iter=5, test_size=0.1, random_state=None),
       error_score='raise',
       estimator=AdaBoostRegressorDTree(learning_rate=1.0, loss='linear', max_depth=None,
            n_estimators=50),
       fit_params={}, iid=True, loss_func=None, n_jobs=2,
       param_grid={'n_estimators': [200], 'max_depth': [50], 'learning_rate': [0.4], 'loss': ['exponential']},
       pre_dispatch='2*n_jobs', refit=False, score_func=None,
       scoring='mean_squared_error', verbose=3)
mean: 0.0801, stdev: 0.0067 MSE for {'n_estimators': 200, 'learning_rate': 0.4, 'loss': 'exponential', 'max_depth': 50}
